import { useDisclosure } from '@mantine/hooks'
import { useAtom, useAtomValue } from 'jotai'
import Head from 'next/head'

import { useDescriptionEditor } from '@/common/hook/useDescriptionEditor'
import { useMutateQuestion } from '@/common/hook/useMutateQuestion'
import { Modal } from '@/component/ui/Modal'
import { editedQuestionAtom, questionDescriptionAtom } from '@/store/atom'

import { Edit } from './Edit'

/**
 * @package
 */

export const EditPage = () => {
  const editedQuestion = useAtomValue(editedQuestionAtom)
  const [isOpened, { open: handleOpen, close: handleClose }] = useDisclosure(false)

  const [description, _] = useAtom(questionDescriptionAtom)

  const { questionEditor } = useDescriptionEditor()

  const { updateQuestionMutation } = useMutateQuestion()

  const handleSubmit = () => {
    if (questionEditor) {
      updateQuestionMutation.mutate({
        id: editedQuestion.id,
        title: editedQuestion.title,
        description,
        hashtags: editedQuestion.hashtags,
      })
      questionEditor.commands.setContent('')
    }
  }
  return (
    <>
      <Head>
        <title>Recurrot - 編集</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Modal
        opened={isOpened}
        onClose={handleClose}
        onSubmit={handleSubmit}
        buttonWord={editedQuestion.id === '0' ? '投稿する' : '更新する'}
        modalTitle={editedQuestion.id === '0' ? 'Recurrotに投稿する' : '質問を更新する'}
      />
      <Edit onClick={handleOpen} />
    </>
  )
}
