import { useSetAtom } from 'jotai'
import type { NextPage } from 'next'
import Head from 'next/head'

import { useNavTab } from '@/common/hook/useNavTab'
import { useQueryCurrentUser } from '@/common/hook/useQueryCurrentUser'
import { useRouterEvent } from '@/common/hook/useRouterEvent'
import type { SingleQuestion } from '@/common/type'
import { QuestionLoading } from '@/component/ui/Loading'
import { resetEditedQuestionAtom, resetQuestionDescriptionAtom } from '@/store/atom'

import { QuestionDetail } from './QuestionDetail'

/**
 * @package
 */

type QuestionDetailPageProps = {
  question: SingleQuestion
}

export const QuestionDetailPage: NextPage<QuestionDetailPageProps> = ({ question }) => {
  const resetEditedQuestion = useSetAtom(resetEditedQuestionAtom)
  const resetDescription = useSetAtom(resetQuestionDescriptionAtom)

  useNavTab('null', 'null')
  useRouterEvent({ eventName: 'routeChangeComplete', callback: resetEditedQuestion })
  useRouterEvent({ eventName: 'routeChangeComplete', callback: resetDescription })
  // const router = useRouter()
  // const { data: question, status: questionStatus } = useQuerySingleQuestion(router.query.id)
  const { data: currentUser, status: currentUserStatus } = useQueryCurrentUser()

  if (currentUserStatus === 'loading') return <QuestionLoading />

  return (
    <>
      {currentUser && (
        <>
          <Head>
            <title>Recurrot - 詳細 </title>
            <meta name='description' content='Generated by create next app' />
            <meta name='viewport' content='width=device-width, initial-scale=1' />
            <link rel='icon' href='/favicon.ico' />
          </Head>

          <QuestionDetail id={question.id} question={question} currentUser={currentUser} />
        </>
      )}
    </>
  )
}
