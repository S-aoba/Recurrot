import { useDisclosure } from '@mantine/hooks'
import { useAtomValue } from 'jotai'
import Head from 'next/head'
import { useState } from 'react'

import { Modal } from '@/component/ui/Modal'
import { isQuestionDisabledAtom } from '@/store/atom'

import { Post } from './Post'
import { usePost } from './usePost'

/**
 * @package
 */

export const PostPage = () => {
  const isQuestionReady = useAtomValue(isQuestionDisabledAtom)

  const [isOpened, { open: handleOpen, close: handleClose }] = useDisclosure(false)

  const [isCreateQuestionLoading, setIsCreateQuestionLoading] = useState(false)

  const { handleDiscardChangesAndRedirectToPostedQuestions, handleCreateQuestion } = usePost({
    setIsCreateQuestionLoading,
  })

  return (
    <>
      <Head>
        <title>Recurrot - 新着</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <Modal
        opened={isOpened}
        onClose={handleClose}
        onSubmit={handleCreateQuestion}
        buttonWord={'投稿する'}
        modalTitle={'Recurrotに投稿する'}
        description='
        <p>
          コミュニティガイドライン をご確認ください みんながより良い体験をするためのマナーについて書かれています。
          <br />ご意見やご要望は Recurrot Discussions へお願いします。
        </p>
            '
        isLoading={isCreateQuestionLoading}
      />
      <Post
        onHandleOpen={handleOpen}
        isQuestionReady={isQuestionReady}
        onHandleClick={handleDiscardChangesAndRedirectToPostedQuestions}
      />
    </>
  )
}
